#!/bin/bash

echo "üîß VoiceInbox Audio & Function Fixes - Complete Test"
echo "=================================================="

# Check if services are running
echo "üìä Checking backend service..."
if curl -s http://localhost:8000/ > /dev/null; then
    echo "‚úÖ Backend is running"
else
    echo "‚ùå Backend not running - start with:"
    echo "   cd backend && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    exit 1
fi

echo "üìä Checking frontend service..."
if curl -s http://localhost:5173/ > /dev/null; then
    echo "‚úÖ Frontend is running"
else
    echo "‚ùå Frontend not running - start with:"
    echo "   cd frontend && npm run dev"
    exit 1
fi

echo ""
echo "üéØ CRITICAL FIXES APPLIED:"
echo "‚úÖ Empty audio buffer prevention (fixes audio cutoffs)"
echo "‚úÖ 30-second timeout protection (prevents stuck buttons)"
echo "‚úÖ 6 Gmail functions now available (was 3):"
echo "   ‚Ä¢ count_unread_emails"
echo "   ‚Ä¢ list_unread" 
echo "   ‚Ä¢ search_messages (improved important email detection)"
echo "   ‚Ä¢ create_draft (NOW AVAILABLE for drafting/sending)"
echo "   ‚Ä¢ mark_read (NOW AVAILABLE)"
echo "   ‚Ä¢ categorize_unread (NOW AVAILABLE)"
echo "‚úÖ Cost-optimized token limits (50-400 tokens vs 100-800)"
echo "‚úÖ Large result truncation (prevents OpenAI overload)"
echo "‚úÖ Better important email search strategies"

echo ""
echo "üß™ TEST SCENARIOS:"
echo ""
echo "1Ô∏è‚É£ BASIC FUNCTIONALITY TEST:"
echo "   ‚Ä¢ Say: 'How many unread emails do I have?'"
echo "   ‚Ä¢ Expected: Button Blue‚ÜíRed‚ÜíPurple‚ÜíBlue, clear count response"

echo ""
echo "2Ô∏è‚É£ EMAIL SEARCH TEST:"
echo "   ‚Ä¢ Say: 'Show me my most important emails'"
echo "   ‚Ä¢ Expected: AI searches with multiple strategies (starred, important, etc.)"

echo ""
echo "3Ô∏è‚É£ EMAIL DRAFTING TEST (NEW!):"
echo "   ‚Ä¢ Say: 'Draft an email to john@example.com saying hello'"
echo "   ‚Ä¢ Expected: AI creates email draft"

echo ""
echo "4Ô∏è‚É£ AUDIO CUTOFF FIX TEST:"
echo "   ‚Ä¢ Say: 'Read me the subject of my most recent email'"
echo "   ‚Ä¢ Expected: Complete audio response, no cutoffs, button returns to blue"

echo ""
echo "5Ô∏è‚É£ SHORT AUDIO PROTECTION TEST:"
echo "   ‚Ä¢ Hold button for less than 0.5 seconds and release"
echo "   ‚Ä¢ Expected: 'Please speak longer - audio too short' message"

echo ""
echo "6Ô∏è‚É£ EMAIL ORGANIZATION TEST (NEW!):"
echo "   ‚Ä¢ Say: 'Categorize my unread emails'"
echo "   ‚Ä¢ Expected: Breakdown by urgent/important/newsletters/etc."

echo ""
echo "üîç MONITOR THESE LOGS:"
echo ""
echo "BACKEND LOGS:"
echo "‚úÖ Good: 'üéµ Audio streaming started' + chunk counts"
echo "‚úÖ Good: 'üîß Configured 6 Gmail functions for OpenAI' (was 3)"
echo "‚úÖ Good: 'üí¨ Using 50-400 token limit for [function]'"
echo "‚ùå Bad: 'input_audio_buffer_commit_empty' (should be fixed)"
echo "‚ùå Bad: 'conversation_already_has_active_response' (should be fixed)"

echo ""
echo "FRONTEND CONSOLE:"
echo "‚úÖ Good: 'üéµ All audio buffers played, ending playback session'"
echo "‚úÖ Good: '‚ö†Ô∏è Audio buffer too small, skipping send: [small number]'"
echo "‚ùå Bad: Button stuck purple (should timeout after 30 seconds max)"

echo ""
echo "üéØ SUCCESS CRITERIA:"
echo "‚Ä¢ Button always returns to Blue (never stuck purple)"
echo "‚Ä¢ Audio plays completely without cutoffs"
echo "‚Ä¢ AI can now draft and send emails"
echo "‚Ä¢ Better detection of important emails"
echo "‚Ä¢ Lower token costs (50-400 vs 100-800)"
echo "‚Ä¢ Empty audio buffers prevented"

echo ""
echo "üåü IMPORTANT EMAIL TIPS:"
echo "Instead of asking 'show me important emails', try:"
echo "‚Ä¢ 'Show me starred emails' (your manually starred ones)"
echo "‚Ä¢ 'Show me emails from [person name]' (specific sender)"
echo "‚Ä¢ 'Show me urgent emails' (subject-based search)"
echo "‚Ä¢ 'Show me emails with invoice' (keyword search)"

echo ""
echo "üí∞ COST SAVINGS:"
echo "Token limits reduced by ~50%:"
echo "‚Ä¢ Short responses: 100‚Üí50 tokens"
echo "‚Ä¢ Medium responses: 300‚Üí150 tokens"
echo "‚Ä¢ Long responses: 800‚Üí400 tokens"
echo "This will significantly reduce OpenAI costs!"

echo ""
echo "üöÄ Ready to test! Go to http://localhost:5173"
echo "The purple button issue should now be COMPLETELY FIXED! üéâ"
